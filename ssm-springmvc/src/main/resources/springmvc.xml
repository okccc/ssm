<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 扫描控制层组件(自定义的Handler) -->
    <context:component-scan base-package="com.okccc.controller"/>

    <!-- 配置HandlerMapping(框架自动加载,可以省略) -->
    <bean id="handlerMapping" class="org.springframework.web.servlet.HandlerMapping" abstract="true"/>

    <!-- 配置HandlerAdapter(框架自动加载,可以省略) -->
    <bean id="handlerAdapter" class="org.springframework.web.servlet.HandlerAdapter" abstract="true"/>

    <!--
        开启mvc注解驱动,会将HandlerMapping和HandlerAdapter加入IOC容器,并给HandlerAdapter添加Jackson的JSON解析器
        源码分析：spring-webmvc包下的META-INF包下的spring.handlers - MvcNamespaceHandler 34行 - AnnotationDrivenBeanDefinitionParser 194/203/239/245/246行
    -->
    <mvc:annotation-driven/>

    <!--
        静态资源：浏览器直接访问,不需要在服务端做任何处理,包括css、js、img等
        web.xml配置的DispatcherServlet的url-pattern是"/",表示前端发送的所有请求都由DS处理
        DS会查找HandlerMapping将请求路径和请求映射进行匹配,但是静态资源并没有对应的@RequestMapping,所以返回404

        配置默认Servlet处理静态资源
        源码分析：spring-webmvc包下的META-INF包下的spring.handlers - MvcNamespaceHandler 35行 - DefaultServletHandlerBeanDefinitionParser 53行 - DefaultServletHttpRequestHandler 128行
        DispatcherServlet(CEO)先找HandlerMapping(大秘书),没有再找defaultServletHandler(小秘书),直接转发路径查找项目下的静态资源

        配置<mvc:default-servlet-handler/>的同时必须配置<mvc:annotation-driven/>,不然所有请求都只能被DefaultServlet处理
    -->
    <mvc:default-servlet-handler/>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring6.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <!-- 注入模板引擎 -->
            <bean class="org.thymeleaf.spring6.SpringTemplateEngine">
                <property name="templateResolver">
                    <!-- 注入模板解析器 -->
                    <bean class="org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver">
                        <property name="prefix" value="WEB-INF/templates/"/>
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!-- 配置异常解析器 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 设置异常类型和跳转页面的逻辑视图 -->
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">error</prop>
                <prop key="java.lang.ArithmeticException">error</prop>
                <prop key="java.lang.NullPointerException">error</prop>
            </props>
        </property>
        <!-- 设置在请求域中共享的异常信息的属性名 -->
        <property name="exceptionAttribute" value="exception"/>
    </bean>

    <bean id="myHandlerInterceptor" class="com.okccc.interceptor.MyHandlerInterceptor"/>

    <!-- 添加拦截器 -->
    <mvc:interceptors>
        <!-- 默认拦截所有 -->
        <!--        <ref bean="myHandlerInterceptor" />-->
        <!-- 添加拦截路径 -->
        <mvc:interceptor>
            <!-- /*表示单层路径,/**表示所有路径 -->
            <mvc:mapping path="/user/**"/>
            <!-- 排除拦截路径 -->
            <mvc:exclude-mapping path="/user/s?s/ant"/>
            <!-- 指定拦截器 -->
            <ref bean="myHandlerInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>